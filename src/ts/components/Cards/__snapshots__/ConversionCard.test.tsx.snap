// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ConversionCard Test Test Snapshot Test Snapshot 1`] = `
<LocaleProvider
  locale={
    Object {
      "Calendar": Object {
        "lang": Object {
          "backToToday": "Back to today",
          "clear": "Clear",
          "dateFormat": "M/D/YYYY",
          "dateSelect": "select date",
          "dateTimeFormat": "M/D/YYYY HH:mm:ss",
          "dayFormat": "D",
          "decadeSelect": "Choose a decade",
          "month": "Month",
          "monthBeforeYear": true,
          "monthSelect": "Choose a month",
          "nextCentury": "Next century",
          "nextDecade": "Next decade",
          "nextMonth": "Next month (PageDown)",
          "nextYear": "Next year (Control + right)",
          "now": "Now",
          "ok": "Ok",
          "placeholder": "Select date",
          "previousCentury": "Last century",
          "previousDecade": "Last decade",
          "previousMonth": "Previous month (PageUp)",
          "previousYear": "Last year (Control + left)",
          "rangePlaceholder": Array [
            "Start date",
            "End date",
          ],
          "timeSelect": "select time",
          "today": "Today",
          "weekSelect": "Choose a week",
          "year": "Year",
          "yearFormat": "YYYY",
          "yearSelect": "Choose a year",
        },
        "timePickerLocale": Object {
          "placeholder": "Select time",
        },
      },
      "DatePicker": Object {
        "lang": Object {
          "backToToday": "Back to today",
          "clear": "Clear",
          "dateFormat": "M/D/YYYY",
          "dateSelect": "select date",
          "dateTimeFormat": "M/D/YYYY HH:mm:ss",
          "dayFormat": "D",
          "decadeSelect": "Choose a decade",
          "month": "Month",
          "monthBeforeYear": true,
          "monthSelect": "Choose a month",
          "nextCentury": "Next century",
          "nextDecade": "Next decade",
          "nextMonth": "Next month (PageDown)",
          "nextYear": "Next year (Control + right)",
          "now": "Now",
          "ok": "Ok",
          "placeholder": "Select date",
          "previousCentury": "Last century",
          "previousDecade": "Last decade",
          "previousMonth": "Previous month (PageUp)",
          "previousYear": "Last year (Control + left)",
          "rangePlaceholder": Array [
            "Start date",
            "End date",
          ],
          "timeSelect": "select time",
          "today": "Today",
          "weekSelect": "Choose a week",
          "year": "Year",
          "yearFormat": "YYYY",
          "yearSelect": "Choose a year",
        },
        "timePickerLocale": Object {
          "placeholder": "Select time",
        },
      },
      "Modal": Object {
        "cancelText": "Cancel",
        "justOkText": "OK",
        "okText": "OK",
      },
      "Pagination": Object {
        "items_per_page": "/ page",
        "jump_to": "Goto",
        "jump_to_confirm": "confirm",
        "next_3": "Next 3 Pages",
        "next_5": "Next 5 Pages",
        "next_page": "Next Page",
        "page": "",
        "prev_3": "Previous 3 Pages",
        "prev_5": "Previous 5 Pages",
        "prev_page": "Previous Page",
      },
      "Popconfirm": Object {
        "cancelText": "Cancel",
        "okText": "OK",
      },
      "Select": Object {
        "notFoundContent": "Not Found",
      },
      "Table": Object {
        "emptyText": "No data",
        "filterConfirm": "OK",
        "filterReset": "Reset",
        "filterTitle": "Filter menu",
        "selectAll": "Select current page",
        "selectInvert": "Invert current page",
        "sortTitle": "Sort",
      },
      "TimePicker": Object {
        "placeholder": "Select time",
      },
      "Transfer": Object {
        "itemUnit": "item",
        "itemsUnit": "items",
        "notFoundContent": "Not Found",
        "searchPlaceholder": "Search here",
        "titles": Array [
          "",
          "",
        ],
      },
      "Upload": Object {
        "previewFile": "Preview file",
        "removeFile": "Remove file",
        "uploadError": "Upload error",
        "uploading": "Uploading...",
      },
      "locale": "en",
    }
  }
>
  <Styled(Card)
    inlinetype="table"
    margin="0 10px 0 0"
    title={
      <styled.div>
        CONVERSION
      </styled.div>
    }
    width="740px"
  >
    <styled.div>
      <Table
        bordered={false}
        className=""
        dataSource={
          Array [
            Object {
              "ETH": "1.00000000",
              "Fee": "3.00000000 ETH",
              "Link": "https://kovan.etherscan.io/tx/test",
              "Status": "Pending",
              "Time": "1970-01-19 03:14:03",
              "Token A": "1.00000000",
              "Token B": "2.00000000",
              "Type": "DUO",
              "key": "test",
            },
          ]
        }
        indentSize={20}
        loading={false}
        locale={Object {}}
        onRow={[Function]}
        pagination={
          Object {
            "pageSize": 10,
            "pageSizeOptions": Array [
              "10",
              "20",
              "50",
            ],
            "showQuickJumper": true,
            "showSizeChanger": true,
            "showTotal": [Function],
            "size": "small",
          }
        }
        prefixCls="ant-table"
        rowClassName={[Function]}
        rowKey="key"
        showHeader={true}
        size="default"
        useFixedHeader={false}
      >
        <Column
          dataIndex="Time"
          sorter={[Function]}
          title="Time"
          width={155}
        />
        <Column
          dataIndex="Status"
          filterMultiple={false}
          filters={
            Array [
              Object {
                "text": "Mined",
                "value": "Mined",
              },
              Object {
                "text": "Pending",
                "value": "Pending",
              },
              Object {
                "text": "Reverted",
                "value": "Reverted",
              },
            ]
          }
          onFilter={[Function]}
          render={[Function]}
          title="Status"
          width={95}
        />
        <Column
          dataIndex="Type"
          filterMultiple={false}
          filters={
            Array [
              Object {
                "text": "Create",
                "value": "Create",
              },
              Object {
                "text": "Redeem",
                "value": "Redeem",
              },
            ]
          }
          onFilter={[Function]}
          render={[Function]}
          title="Type"
          width={90}
        />
        <Column
          className="eth"
          dataIndex="ETH"
          title="ETH"
        />
        <Column
          className="token-ab"
          render={[Function]}
          title="aETH/bETH"
        />
        <Column
          className="fee"
          dataIndex="Fee"
          title="Fee"
          width={140}
        />
      </Table>
    </styled.div>
  </Styled(Card)>
</LocaleProvider>
`;
